openapi: '3.0.0'
info:
  version: '1.0'
  title: Billie Pay After Delivery
  description: 'API Specification for Pay After Delivery API'
  contact:
    email: "engineering@billie.io"
servers:
- url: ''
  variables: {}
paths:
  /order:
    post:
      summary: Create new order
      tags:
      - Order
      operationId: OrderPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewOrderApi'
      responses:
        201:
          description: 'Order created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: 'Order Invalid field or invalid field value'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        401:
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
  /order/{order_id}/ship:
    post:
      summary: Ship order
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: 'Order id'
      tags:
      - Order
      operationId: OrderShip
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipOrder'
      responses:
        200:
          description: 'Order shipped'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: 'Order Invalid field or invalid field value'
        401:
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Order not found'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
  /order/{order_id}:
    get:
      summary: Retrieve order
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: 'Order id'
      tags:
      - Order
      operationId: RetrieveOrder
      responses:
        200:
          description: 'Retrieve the order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        401:
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        404:
          description: 'Order not found'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
    patch:
      summary: Update order amount / duration
      description: >
        This call is for reducing the invoice amount (mostly for partial cancelation), which is always possible until debtor payed full.This call can also be used to move the due date into the future. This is possible starting after shipment was confirmed until last day before reaching the due date. The new duration is to be set (i.e. initial request for 30 days, shipment on the 01.01., due date = 31.01., update duration on 45 days, new due date = 15.02.).

        - If invoice_number, invoice_url and amount are present, then order amount gets updated.

        - But when only duration then duration gets updated.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOrder'
      parameters: 
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: 'Order id'
      tags:
      - Order
      operationId: PatchOrder
      responses:
        204:
          description: 'Order updated'
        400:
          description: 'Order Invalid field or invalid field value'
        401:
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Order not found'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
  /order/{order_id}/cancel:
    post:
      summary: Order full cancellation
      parameters: 
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: 'Order id'
      tags:
      - Order
      operationId: OrderFullCancellation
      responses:
        204:
          description: 'Order cancelled'
        401:
          description: 'User is not autorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Order not found'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
  /order/{order_id}/confirm-payment:
    post:
      summary: Merchant payment confirmation
      description: >
        Can be full or partial payment. If was paid too much, only order's amount will be direct debited.
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: 'Order id'
      tags:
      - Order
      operationId: MerchantPayment
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantPaymentRequest'
      responses:
        204:
          description: 'Order payment confirmed'
        400:
          description: 'Order Invalid field or invalid field value'
        401:
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Order not found'
        500:
          description: 'Unexpected server error'
      security:
      - api_key: []
  /webhooks:
    post:
      tags:
      - Webhook
      description: Subscribes to order notifications
      parameters:
        - name: callbackUrl
          in: query
          description: Url where webhook data will be sent
          required: true
          schema:
            type: string
            format: uri
            example: https://billies-server.com
      responses:
        '201':
          description: Webhook successfully created
          content:
            application/json:
              schema:
                description: Webhook information
                required:
                  - webhookId
                properties:
                  webhookId:
                    type: string
                    example: 2531329f-fb09-4ef7-887e-84e648214436
      callbacks:
        onOrderChange:
          '{$request.query.callbackUrl}':
            post:
              requestBody:
                description: Order change payload
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Webhook'
              responses:
                '204':
                  description: Data successfully received

components:
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "X-Api-Key"
      in: "header"
  schemas:
    CreateNewOrderApi:
      title: "Create new order"
      type: object
      properties:
        debtor_person:
          $ref: '#/components/schemas/DebtorPerson'
        debtor_company:
          $ref: '#/components/schemas/DebtorCompany'
        delivery_address:
          $ref: '#/components/schemas/DeliveryAddress'
        amount:
          $ref: '#/components/schemas/Amount'
        comment:
          description: ''
          example: 'Hello, world!'
          type: string
        duration:
          description: ''
          example: 10
          type: integer
          format: int32
        order_id:
          description: ''
          example: someorderid-0
          type: string
      required:
      - debtor_person
      - debtor_company
      - amount
      - duration
      - order_id
    DebtorPerson:
      title: 'Debtor person'
      type: object
      properties:
        email:
          example: 'debtor@billie.io'
          type: string
          format: email
        salutation:
          description: 'm/f'
          example: 'f'
          type: string
        first_name:
          type: string
          example: 'Bill'
        last_name:
          type: string
          example: 'Llie'
        phone_number:
          type: string
          example: '+4900000000000'
      required:
      - email
    DebtorCompanyOnOrderCreatedResponse:
      title: 'Debtor company object on order created response'
      type: object
      properties:
        name:
          type: string
        address_house_number:
          description: ''
          example: '4'
          type: string
        address_street:
          description: ''
          example: 'Charlottenstra√üe'
          type: string
        address_addition:
          description: ''
          example: '2OG L'
          type: string
        address_city:
          description: ''
          example: 'Berlin'
          type: string
        address_postal_code:
          description: ''
          example: '10969'
          type: string
        address_country:
          description: 'ISO-3166-1 alpha-2 country code'
          example: DE
          type: string
      required:
      - name
      - address_house_number
      - address_street
      - address_addition
      - address_city
      - address_postal_code
      - address_country
    DebtorCompany:
      title: 'Debtor company'
      type: object
      properties:
        merchant_customer_id:
          description: ''
          example: 'MERCHANT_CUSTOMER_ID'
          type: string
        name:
          description: ''
          example: 'Billie GmbH'
          type: string
        address_house_number:
          description: ''
          example: '4'
          type: string
        address_street:
          description: ''
          example: 'Charlottenstra√üe'
          type: string
        address_addition:
          description: ''
          example: '2OG L'
          type: string
        address_city:
          description: ''
          example: 'Berlin'
          type: string
        address_postal_code:
          description: ''
          example: '10969'
          type: string
        address_country:
          description: 'ISO-3166-1 alpha-2 country code'
          example: DE
          type: string
        industry_sector:
          description: ''
          example: 'Sonstige Finanzierungsinstitutionen a. n. g.'
          type: string
        subindustry_sector:
          description: ''
          example: 'Factoring'
          type: string
        legal_form:
          description: ''
          example: 'GmbH'
          type: string
        tax_id:
          description: 'USt-ID'
          example: 111111
          type: string
        tax_number:
          description: ''
          example: ''
          type: string
        registration_number:
          description: ''
          example: 'HRB 182428 B'
          type: string
        established_customer:
          description: 'Either 1 or 0'
          example: 1
          type: boolean
      required:
      - merchant_customer_id
      - name
      - address_house_number
      - address_street
      - address_city
      - address_postal_code
      - address_country
      - industry_sector
      - legal_form
    DeliveryAddress:
      title: 'Delivery address'
      type: object
      properties:
        house_number:
          description: ''
          example: '4'
          type: string
        street:
          description: ''
          example: 'Charlottenstra√üe'
          type: string
        city:
          description: ''
          example: 'Berlin'
          type: string
        postal_code:
          description: ''
          example: '10969'
          type: string
        country:
          description: ''
          example: DE
          type: string
      required:
      - house_number
      - street
      - city
      - postal_code
      - country
    Amount:
      title: 'Order amount'
      type: object
      properties:
        net:
          description: ''
          example: 450
          type: number
          format: double
        gross:
          description: ''
          example: 500
          type: number
          format: double
        tax:
          description: ''
          example: 50
          type: number
          format: double
      required:
      - net
      - gross
      - tax
    BankAccount:
      title: "Debtor's virtual bank account"
      type: object
      properties:
        iban:
          type: string
          description: "Virtual IBAN"
        bic:
          type: string
      required:
      - iban
      - bic
    Order:
      title: "Order object"
      type: object
      properties:
        order_id:
          type: string
        state:
          type: string
          description: 'canceled|declined|created|shipped|paid_out|late|completed'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        debtor_company:
          $ref: '#/components/schemas/DebtorCompanyOnOrderCreatedResponse'
        invoice:
          $ref: '#/components/schemas/Invoice'
        reasons:
          type: string
      required:
      - order_id
      - state
      - bank_account
    ShipOrder:
      description: 'Shipping order request model'
      type: object
      properties:
        invoice_number:
          type: string
        invoice_url:
          type: string
          format: url
        shipping_document_url:
          type: string
      required:
      - invoice_number
      - invoice_url
    PatchOrder:
      description: 'Update order request model'
      type: object
      properties:
        invoice_number:
          type: string
        invoice_url:
          type: string
          format: url
        duration:
          type: number
          format: int32
        amount:
          $ref: '#/components/schemas/Amount'
    Invoice:
      description: "Customer's invoice"
      type: object
      properties:
        invoice_number:
          type: string
          example: 'IN-1111'
        payout_amount:
          type: number
          format: double
        fee_amount:
          type: number
          format: double
        fee_rate:
          type: number
          format: double
        due_date:
          type: string
          format: date
          example: '2016-11-01'
      required:
      - invoice_number
      - payout_amount
      - fee_amount
      - fee_rate
      - due_date
    MerchantPaymentRequest:
      title: 'Request of merchant payment'
      type: object
      properties:
        paid_amount:
          type: number
          format: double
          example: 23.12
      required:
      - paid_amount
    Webhook:
      title: Webhook for order change
      type: object
      properties:
        event:
          description: reminder|dunning1|dunning2|dunning3|rebooking|payment|dca
          type: string
        order_id:
          type: string
        amount:
          type: string
        open_amount:
          type: string
        url_notification:
          type: string
      required:
        - event
        - order_id
    ErrorBlock:
      title: "Error block"
      type: object
      properties:
        title:
          type: string
        code:
          type: string
    ErrorUnauthorized:
      title: 'Error API token is not authorized'
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorBlock'
          example:
            -
              title: 'Unauthorized'
              code: 'unauthorized'
    ErrorBadRequest:
      title: 'Invalid request'
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              code:
                type: string
              source:
                type: string
          example:
            -
              title: 'Debtor can not be found'
              code: '0001'
              source: 'debtor_company'
            -
              title: 'Duration can not be empty'
              code: '0002'
              source: 'duration'
